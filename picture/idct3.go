package picture

func idct_block(out []int64, stride int64, d []int64) {
   var v []int64
   for i := 0; i < 8; i++ {
      if d[8]==0 && d[16]==0 && d[24]==0 && d[32]==0 && d[40]==0 && d[48]==0 && d[56]==0 {
         v[0] = d[0] * 4
         v[8] = d[0] * 4
         v[16] = d[0] * 4
         v[24] = d[0] * 4
         v[32] = d[0] * 4
         v[40] = d[0] * 4
         v[48] = d[0] * 4
         v[56] = d[0] * 4
      } else {
         t := idct_1d(d, d[8:], d[16:], d[24:], d[32:], d[40:], d[48:], d[56:])
         t.x0 += 512
         t.x1 += 512
         t.x2 += 512
         t.x3 += 512
         v[0] = (t.x0 + t3) >> 10
         v[56] = (t.x0 - t3) >> 10
         v[8] = (t.x1 + t2) >> 10
         v[48] = (t.x1 - t2) >> 10
         v[16] = (t.x2 + t1) >> 10
         v[40] = (t.x2 - t1) >> 10
         v[24] = (t.x3 + t0) >> 10
         v[32] = (t.x3 - t0) >> 10
      }
      d++
      v++
   }
   for i:=0, o:=out; i < 8; ++i,v+=8,o+=stride {
      idct_1d(v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7])
      x0 += 65536 + (128<<17)
      x1 += 65536 + (128<<17)
      x2 += 65536 + (128<<17)
      x3 += 65536 + (128<<17)
      o[0] = clamp((x0+t3) >> 17)
      o[7] = clamp((x0-t3) >> 17)
      o[1] = clamp((x1+t2) >> 17)
      o[6] = clamp((x1-t2) >> 17)
      o[2] = clamp((x2+t1) >> 17)
      o[5] = clamp((x2-t1) >> 17)
      o[3] = clamp((x3+t0) >> 17)
      o[4] = clamp((x3-t0) >> 17)
   }
}

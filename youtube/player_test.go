package youtube_test

import (
   "github.com/89z/mech/youtube"
   "testing"
)

type video struct {
   id string
   detailPage bool
}

var videos = []video{
   {id: "SkRSXFQerZs", detailPage: false}, //AgeRestricted
   {id: "MeJVWBSsPAY", detailPage: true}, //EmbedRestrictedByAuthor
   /*
   {id: "-xNN-bJQ4vI"}, //Omnidirectional
   {id: "54e6lBE3BoQ"}, // ANDROID
   {id: "5VGm0dczmHc"}, //RatingDisabled
   {id: "5qap5aO4i9A"}, //LiveStream
   {id: "9bZkp7q19f0"}, //Normal
   {id: "AI7ULzgf8RU"}, //ContainsDashManifest
   {id: "HtVdAasjOgU"}, // WEB_EMBEDDED_PLAYER
   {id: "V5Fsj_sCKdg"}, //ContainsHighQualityStreams
   {id: "XeojXq6ySs4"}, // Topic
   {id: "YltHGKX80Y8"}, //ContainsClosedCaptions
   {id: "ZGdLIwrGHG8"}, //Unlisted
   {id: "_kmeFXjjGfk"}, //EmbedRestrictedByYouTube
   {id: "hySoCSoH-g8"}, //AgeRestrictedEmbedRestricted
   {id: "rsAAeyAr-9Y"}, //LiveStreamRecording
   */
}

func TestAndroid(t *testing.T) {
   for _, vid := range videos {
      _, err := youtube.NewPlayer(vid.id, vid.detailPage)
      if err != nil {
         t.Fatal(err)
      }
      /*
      f := p.AdaptiveFormats.Filter(func(f youtube.Format) bool {
         return f.Height == 0
      })
      if err := f[0].Write(io.Discard); err != nil {
         t.Fatal(err)
      }
      */
   }
}

/*
func pass(fs []format) bool {
   for _, f := range fs {
      if f.Itag == 134 && f.URL != "" {
         return true
      }
   }
   return false
}
*/

const desc = "Provided to YouTube by Epitaph\n\nSnowflake · Kate Bush\n\n" +
"50 Words For Snow\n\n" +
"℗ Noble & Brite Ltd. trading as Fish People, under exclusive license to Anti Inc.\n\n" +
"Released on: 2011-11-22\n\nMusic  Publisher: Noble and Brite Ltd.\n" +
"Composer  Lyricist: Kate Bush\n\nAuto-generated by YouTube."

func TestMweb(t *testing.T) {
   /*
   p, err := youtube.Mweb.Player("XeojXq6ySs4")
   if err != nil {
      t.Fatal(err)
   }
   if p.PublishDate != "2020-11-05" {
      t.Fatalf("%+v\n", p)
   }
   if p.ShortDescription != desc {
      t.Fatalf("%+v\n", p)
   }
   if p.Title != "Snowflake" {
      t.Fatalf("%+v\n", p)
   }
   if p.ViewCount == 0 {
      t.Fatalf("%+v\n", p)
   }
   */
}

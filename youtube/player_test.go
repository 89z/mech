package youtube_test

import (
   "github.com/89z/mech/youtube"
   "io"
   "testing"
   "time"
)

const desc = "Provided to YouTube by Epitaph\n\nSnowflake · Kate Bush\n\n" +
"50 Words For Snow\n\n" +
"℗ Noble & Brite Ltd. trading as Fish People, under exclusive license to Anti Inc.\n\n" +
"Released on: 2011-11-22\n\nMusic  Publisher: Noble and Brite Ltd.\n" +
"Composer  Lyricist: Kate Bush\n\nAuto-generated by YouTube."

var videos = []video{
   {id: "MeJVWBSsPAY", detailPage: true},
   {id: "SkRSXFQerZs", detailPage: false},
}

func TestGetVideoInfo(t *testing.T) {
   for _, vid := range videos {
      p, err := youtube.GetVideoInfo(vid.id, vid.detailPage)
      if err != nil {
         t.Fatal(err)
      }
      f := p.AdaptiveFormats.Filter(func(f youtube.Format) bool {
         return f.Height == 0
      })
      if err := f[0].Write(io.Discard); err != nil {
         t.Fatal(err)
      }
      time.Sleep(100 * time.Millisecond)
   }
}

func TestPlayer(t *testing.T) {
   p, err := youtube.IPlayer("XeojXq6ySs4")
   if err != nil {
      t.Fatal(err)
   }
   if p.PublishDate != "2020-11-05" {
      t.Fatalf("%+v\n", p)
   }
   if p.ShortDescription != desc {
      t.Fatalf("%+v\n", p)
   }
   if p.Title != "Snowflake" {
      t.Fatalf("%+v\n", p)
   }
   if p.ViewCount == 0 {
      t.Fatalf("%+v\n", p)
   }
}

type video struct {
   id string
   detailPage bool
}

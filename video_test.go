package youtube

import (
   "fmt"
   "net/http"
   "testing"
)

const desc = "Provided to YouTube by Epitaph\n\nSnowflake · Kate Bush\n\n" +
"50 Words For Snow\n\n" +
"℗ Noble & Brite Ltd. trading as Fish People, under exclusive license to Anti Inc.\n\n" +
"Released on: 2011-11-22\n\nMusic  Publisher: Noble and Brite Ltd.\n" +
"Composer  Lyricist: Kate Bush\n\nAuto-generated by YouTube."

func TestSignatureCipher(t *testing.T) {
   v, err := NewVideo("XeojXq6ySs4")
   if err != nil {
      t.Error(err)
   }
   if v.Description() != desc {
      t.Errorf("%+v\n", v)
   }
   if v.ViewCount() == 0 {
      t.Errorf("%+v\n", v)
   }
   f, err := v.NewFormat(251)
   if err != nil {
      t.Error(err)
   }
   req, err := f.NewRequest()
   if err != nil {
      t.Error(err)
   }
   fmt.Println("Get", req.URL)
   res, err := new(http.Client).Do(req)
   if err != nil {
      t.Error(err)
   }
   switch res.StatusCode {
   case http.StatusOK, http.StatusPartialContent:
   default:
      t.Error(res.StatusCode)
   }
}

func TestURL(t *testing.T) {
   v, err := NewVideo("x8_KsatcC8c")
   if err != nil {
      t.Error(err)
   }
   f, err := v.NewFormat(251)
   if err != nil {
      t.Error(err)
   }
   req, err := f.NewRequest()
   if err != nil {
      t.Error(err)
   }
   fmt.Println("Get", req.URL)
   res, err := new(http.Client).Do(req)
   if err != nil {
      t.Error(err)
   }
   switch res.StatusCode {
   case http.StatusOK, http.StatusPartialContent:
   default:
      t.Error(res.StatusCode)
   }
}
